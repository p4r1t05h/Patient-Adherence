abs(-x)
sqrt(x)
print(x)
exp(x=y)
exp(y=x)
exp(y=y)
exp(x=y)
exp(z=z)
exp(x=z)
sin(pi/x)
factorial(x)
round(x/y, digit=2)
sign(-x)
-x
length(x)
min(x)
max(x)
range(x)
var(x)
round(x/y, digit=2)
mean(x)
median(x)
mode(x)
mean(y)
median(y)
mode(y)
var(x)
var(y)
sd(x)
sort(x)
sort(x, descending=TRUE)
sort(x, decreasing = TRUE)
sum(x)
prod(x)
x<-c(x,7)
x
v<-c(1,2,3,NA)
v
is.na(v)
mode(v)
range(v)
range(v, na.rm = TRUE)
mean(v)
mean(v, na.rm = TRUE)
u<-c(1,2,3, "abcd")
u
mode(u)
#Colon Operator
xx<-1:30
xx
xx[10]
xx[10:15]
xx[c(5,10,15,20)]
xx[-30]
xx[-(20:30)]
xx[-c(5,15,25,20)]
#Sequence
seq(from=5, to=10)
seq(5,10)
seq(0,10, by=2)
seq(0,10, length.out = 10)
#Repeat
rep(0, times=10)
rep(0,10)
rep(1:5, times=2)
rep(1:5, each=2)
rep(1:5, times=2, each=2)
l1<-x>3
li
l1
x+l1
v2<-1:4
v2
paste("Quarter", c(1,2,3,4), sep="-")
paste("Quarter", v2, sep="-")
paste("quarter", 1:5, sep="-")
#Character Vector
c1<-("Quarter")
c1
Quarters<-paste("Quarter", 1:4, sep="-")
Quarters
mode(Quarters)
cat("Quarter", 1:4, sep = "-")
paste(5, c(1,2,3,4), sep="-")
length(Quarters)
substr(Quarters, start = 9, stop = 9)
strsplit(Quarters, split = "-")
strsplit(Quarters, split = "r")
nchar(Quarters)
toupper(Quarters)
tolower(Quarters)
paste(Quarters, Quarters, sep = ", ")
cat(Quarters, Quarters, sep = ", ")
m2<-c("do", "do not", "not")
m2
grep("do", m2)
m2<-c("do", "do not", "not", "does")
m2
grep("do", m2)
m2<-c(m2, "1")
m2
grep("[a-z]", m2)
m2<-c("do", "do not", "not")
m2
grep("do", m2)
m2<-c(m2, "1")
m2
grep("[a-z]", m2)
m2<-c(m2, "1", "does")
m2
grep("[a-z]", m2)
m2<-c("do", "do not", "not")
m2
m2<-c(m2, "1")
m2
grep("[a-z]", m2)
gsub("do", "did", m2)
m2<-c(m2, "not do")
m2
regexpr("do", m2)
f<-c(5,6,7)
s<-c(4,7,6)
ifelse(f>s,f,s)
v
v1<-v[!is.na(v)]
v1
#Matrix
M1<-matrix(data=1, nrow=3, ncol = 3)
M1
dim(M1)
M2<-matrix(NA, nrow = 2, ncol = 2)
M2
dim(M2)
M3<-matrix(c(4,5,6,7), nrow = 2, ncol=2)
M3
M3<-matrix(c(4,5,6,7), nrow = 2, ncol=3)
M3
M3<-matrix(c(4,5,6,7), nrow = 2, ncol=2)
M3
V1<-1:12
V1
M4<-matrix(V1, nrow = 5)
M4
M5<-matrix(V1, nrow = 4, byrow = TRUE)
M5
V2<-1:5
V3<-V2^2
M6<-cbind(V2,V3)
M6
M6<-cbind(M6, V3*2)
M6
M7<-rbind(V2,V3)
M7
colnames(M6)<-C("Vector1", "vector2", "vector3")
colnames(M6)<-c("Vector1", "vector2", "vector3")
M6
rownames(M6)<-c("row1", "row2", "row3", "row4")
rownames(M6)<-c("row1", "row2", "row3", "row4", "row5")
M6
dim(M7)
V2<-c(V2, 6)
V2<-c(V2, 6)
M8<-rbind(V1,V2)
M8
M9<-diag(4)
M9
M10<-diag(V2)
M10
diag(M10)
#Indexing Matrix
M4
M4[4,2]
M4[,2]
M4[3,]
M4[,1:2]
M4[c(2,4),]
M4
M4>4
M4[,2]>6
M4[M4[,1]>4,]
M4[M4[,2]>6,]
M4[M4[,1]>4,]
M4[TRUE,1]
M4[c(FALSE, TRUE, T, F, F),2]
rm(list = ls())
# EDA & Visualization
getwd()
library(ISLR)
library(data.table)
data(Hitters)
str(Hitters)
head(Hitters)
names(Hitters)
?Hitters
Hitters1=data.frame(Hitters)
mean(Hitters1$mean)
#Remove rows with NA
table(is.na(Hitters1$Salary))
Hitters1=na.omit(Hitters1)
table(is.na(Hitters1$Salary))
str(Hitters1)
#ADD more categprical Variable Salary1 with value (L M H)
Salary1<-cut(Hitters1$Salary, breaks = 3, labels = c("L", "M", "H"))
Hitters1<-cbind(Hitters1, Salary1)
head(Hitters1)
table(Salary1)
n<-length(Hitters1$Salary1)
#======================================
#Univariate Analysis
#=====Qualitative (Categorical) Data - Numerical Analysis=============
#Count
table(Hitters1$Salary1)
#Proportion
prop.table(table(Hitters1$Salary1))
#Percentage
prop.table(table(Hitters1$Salary1))*100
bars<-as.matrix(table(Hitters1$Salary1))
bars
colnames(bars)<-"Salary"
rownames(bars)<-c("Low", "Medium", "High")
names(bars)<-c("Low", "Medium", "Hign")
pie(bars, col = c(3,4,5), main = "Salary Grade")
bars
par(mfrow=c(1,1))
barplot(bars)
?par
barplot(bars, beside = T)
barplot(bars, beside = T, space = 0.5, names.arg = c("LowSal","MediumSal","HighSal"))
barplot(bars, beside = T, space = 0.5, col=c(3,4,5),names.arg = c("LowSal","MediumSal","HighSal"))
barplot(bars, beside = T, space = 0.5, col=c(7,8,9),names.arg = c("LowSal","MediumSal","HighSal"))
par(mfrow=c(1,2))
par(mfrow=c(1,2))
pie(bars, col = c(3,4,5), main = "Salary Grade")
barplot(bars, beside = T, space = 0.5, col=c(7,8,9),names.arg = c("LowSal","MediumSal","HighSal"))
par(mfrow=c(1,2))
barplot(bars, beside = T, space = 0.5, col=c(7,8,9),names.arg = c("LowSal","MediumSal","HighSal"), main = "Salary Grade")
par(mfrow=c(1,2))
par(mfrow=c(1,1))
barplot(bars, beside = T, space = 0.5, col=c(7,8,9),names.arg = c("LowSal","MediumSal","HighSal"), main = "Salary Grade")
par(mfrow=c(1,2))
barplot(bars, beside = T, space = 0.5, col=c(7,8,9),names.arg = c("LowSal","MediumSal","HighSal"), main = "Salary Grade")
barplot(bars, beside = T, space = 0.5, col=c(7,8,9),names.arg = c("LowSal","MediumSal","HighSal"), main = "Salary Grade")
par(mfrow=c(1,1))
barplot(bars, beside = T, space = 0.5, col=c(7,8,9),names.arg = c("LowSal","MediumSal","HighSal"), main = "Salary Grade")
p=prop.test(x=64, n=400, p=0.2, alternative = "less", conf.level = 0.95)
sqrt(p$statistic)
p$p.value
p
View(p)
min(Hitters1$Salary)
max(Hitters1$Salary)
mean(Hitters1$Salary)
median(Hitters1$Salary)
range(Hitters1$Salary)
sd(Hitters1$Salary)
salary.5p<-fivenum(Hitters1$Salary)
salary.5p
Salaru.sum<-summary(Hitters1$Salary)
Salary.sum<-summary(Hitters1$Salary)
salary.sum<-summary(Hitters1$Salary)
salary.sum
names(salary.sum)
IQR<-salary.5p[4]-salary.5p[2]
IQR
rm(Salaru.sum)
rm(Salary.sum)
hist(Hitters1$Salary)
hist(Hitters1$Salary, breaks = 5)
hist(Hitters1$Salary, breaks = 100)
hist(Hitters1$Salary, breaks = c(400,800,1200,1600,2000,2400,2800), main = "Histogram for Salary",
ylab = "Frequency", xlab = "Salary")
hist(Hitters1$Salary, breaks = c(400,800,1200,1600,2000,2400,2800), main = "Histogram for Salary",
ylab = "Frequency", xlab = "Salary")
hist(Hitters1$Salary, breaks = c(0,400,800,1200,1600,2000,2400,2800), main = "Histogram for Salary",
ylab = "Frequency", xlab = "Salary")
?hist
plot(density(Hitters1$Salary))
density(Hitters1$Salary)
plot(salary.sum)
plot(table(salary.sum))
plot(density(Hitters1$Salary))
boxplot(Hitters1$Salary)
boxplot(Hitters1$Salary, ylab="Salary", xlab="Employees")
boxplot(Hitters1$Salary, ylab="Salary", xlab="Employees", col = c(3,4,5))
boxplot(Hitters1$Salary, ylab="Salary", xlab="Employees")
boxplot(Hitters1$Salary, horizontal = T)
salary.stats<-boxplot.stats(Hitters1$Salary)$stats
salary.stats
boxplot(salary.stats)
boxplot(salary.5p)
#=====Shapiro Wilk Normality Test (Normal if p>0.05)
shapiro.test(Hitters1$Salary)
t.test(Hitters1$Salary, alternative = "Greater", mu=425)
t.test(Hitters1$Salary, alternative = "greater", mu=425)
a<-boxplot(Hitters1$Salary~Hitters1$League)
a$stats
tapply(Hitters1$Salary, Hitters1$League, summary)
t.test(Hitters1$Salary~Hitters1$League, alternative="t")
wt.before<-c(65.5,78.3,84.6,67.8,72.9,79.8,56.4,88.3,101.6,88.0,77.4,82.5,93.3)
wt.after<-c(67.1,73.6,82.9,71.0,73.1,73.2,59.9,81.8,91.4,82.5,76.1,81.4,88.8)
par(mfrow=c(1,2))
hist(wt.before,4)
hist(wt.after,4)
t.test(wt.after, wt.before, alternative = "l", paired = T)
# b) Using Formula
wt<-c(wt.after,wt.before)
period<-c(rep("After",13), rep("Before",13))
cbind(period, wt)
boxplot(wt~period)
t.test(wt~period, alternative="l", paired=T)
library(datasets)
data("mtcars")
cars
cars<-mtcars
str(cars)
head(cars)
#convert no of cylinder to factor (Categorical)
cars$cyl<-as.factor(cars$cyl)
str(cars)
table(cars$cyl)
boxplot(cars$mpg~cars$cyl)
par(mfrow=c(1,1))
boxplot(cars$mpg~cars$cyl)
cars.aov<-aov(mpg~cyl, data=cars)
summary(cars.aov)
Salary.Table<-table(Hitters1$League,Hitters1$Salary1)
Salary.Table
prop.table(Salary.Table,1)*100
sal.chi<-chisq.test(Salary.Table)
sal.chi
sal.chi$statistic
sal.chi$expected
sal.chi$residuals
hist(cars$mpg)
hist(cars$wt)
##Scatter Plot (Q->Q)
plot(cars$mpg~cars$wt)
##Corelation Coefficient
cor(cars$mpg,cars$wt)
summary(carslm1)
#Linear Regression Line
#T test for Slope
carslm1<-lm(mpg~wt, data = cars) #fitting linear regression model
summary(carslm1)
abline(carslm1)
#Stratified Scatter plot
plot(cars$mpg, cars$wt, col(cars$cyl), pch=19)))
#Stratified Scatter plot
plot(cars$mpg, cars$wt, col(cars$cyl), pch=19)
#Stratified Scatter plot
plot(cars$mpg, cars$wt, col=(cars$cyl), pch=19)
#Matrix plot
pairs(cars[,c(1,2,3,4,5,6)])
rm(list=ls())
#setting working directory
setwd("D:/Data Science/Abzooba")
getwd()
#Loading important libraries
library(rpart)
library(C50)
library(randomForest)
library(class)
library(e1071)
library(caret)
library(boot)
#Loading data sets
train<-read.csv("Training Data.csv", header = T)
test<-read.csv("Test Data.csv", header = T)
str(train)
head(train)
#checking for missing data
table(is.na(train))
train$Diabetes<-as.factor(train$Diabetes)
test$Diabetes<-as.factor(test$Diabetes)
train$Alcoholism<-as.factor(train$Alcoholism)
test$Alcoholism<-as.factor(test$Alcoholism)
train$HyperTension<-as.factor(train$HyperTension)
test$HyperTension<-as.factor(test$HyperTension)
train$Smokes<-as.factor(train$Smokes)
test$Smokes<-as.factor(test$Smokes)
train$Tuberculosis<-as.factor(train$Tuberculosis)
train$Sms_Reminder<-as.factor(train$Sms_Reminder)
str(train)
str(test)
#====Univariate Analysis
#Quantitative Variables
#Numerical analysis of Age | 5 point summary
age.5p<-summary(train$Age)
age.5p
#Visual analysis for Age | Histogram and Boxplot
hist(train$Age, main = "Histogram of Age")
boxplot(train$Age, names = "Boxplot of Age")
#Numerical analysis of Prescription Period | 5 point summary
pres.5p<-summary(train$Prescription_period)
pres.5p
#Visual analysis for Prescription Period | Histogram and Boxplot
hist(train$Prescription_period, main = "Histogram of Prescription Period")
boxplot(train$Prescription_period, names = "Boxplot of Prescription PEriod")
#===Bivariate Analysis
#Numerical Analysis for Gender | Proportion Table
prop.table(table(train$Gender))*100
gen.prop<-as.matrix(table(train$Gender))
#Visual Analysis for Gender | Bar Graph & Pie chart
barplot(gen.prop, col = c(3,4), horiz = FALSE)
pie(gen.prop, labels = c("1=F", "2=M"))
#Numerical Analysis for Diabetes | Proportion Table
prop.table(table(train$Diabetes))*100
diabetes.prop<-as.matrix(table(train$Diabetes))
#Visual Analysis for Gender | Bar Graph & Pie chart
barplot(diabetes.prop, col = c(3,4), horiz = FALSE)
pie(diabetes.prop, labels = c("1=No", "2=Yes"))
#Numerical Analysis for Alchoholism | Proportion Table
prop.table(table(train$Alcoholism))*100
alchohol.prop<-as.matrix(table(train$Alcoholism))
#Visual Analysis for Gender | Bar Graph & Pie chart
barplot(alchohol.prop, col = c(3,4), horiz = FALSE)
pie(alchohol.prop, labels = c("1=No", "2=Yes"))
#Numerical Analysis for Hypertension | Proportion Table
prop.table(table(train$HyperTension))*100
hyper.prop<-as.matrix(table(train$HyperTension))
#Visual Analysis for Gender | Bar Graph & Pie chart
barplot(hyper.prop, col = c(3,4), horiz = FALSE)
pie(hyper.prop, labels = c("1=No", "2=Yes"))
#Numerical Analysis for Smokes | Proportion Table
prop.table(table(train$Smokes))*100
smoke.prop<-as.matrix(table(train$Smokes))
#Visual Analysis for Gender | Bar Graph & Pie chart
barplot(smoke.prop, col = c(3,4), horiz = FALSE)
pie(smoke.prop, labels = c("1=No", "2=Yes"))
#Numerical Analysis for Tuberculosis | Proportion Table
prop.table(table(train$Tuberculosis))*100
tuber.prop<-as.matrix(table(train$Tuberculosis))
#Visual Analysis for Gender | Bar Graph & Pie chart
barplot(tuber.prop, col = c(3,4), horiz = FALSE)
pie(tuber.prop, labels = c("1=No", "2=Yes"))
#Numerical Analysis for SMS Reminder | Proportion Table
prop.table(table(train$Sms_Reminder))*100
sms.prop<-as.matrix(table(train$Sms_Reminder))
#Visual Analysis for Gender | Bar Graph & Pie chart
barplot(sms.prop, col = c(3,4), horiz = FALSE)
pie(sms.prop, labels = c("1=0 Reminder", "2=1 Reminder", "3=2 Reminders"))
gen.table<-table(train$Gender,train$Adherence)
gen.table
#Chi Squared test for Dependency
gen.chi<-chisq.test(gen.table)
gen.chi
#Numerical Analysis Diabetes->Adherence | 2 Way Table
dia.table<-table(train$Diabetes,train$Adherence)
dia.table
#Chi Squared test for Dependency
dia.chi<-chisq.test(dia.table)
dia.chi
#since p<0.05 | It is DEPENDET
#Numerical Analysis Alcoholism->Adherence | 2 Way Table
al.table<-table(train$Alcoholism,train$Adherence)
al.table
#Chi Squared test for Dependency
al.chi<-chisq.test(al.table)
al.chi
#since p<0.05 | It is DEPENDET
#Numerical Analysis Hypertension->Adherence | 2 Way Table
hyper.table<-table(train$HyperTension,train$Adherence)
hyper.table
#Chi Squared test for Dependency
hyper.chi<-chisq.test(hyper.table)
hyper.chi
#since p<0.05 | It is DEPENDET
#Numerical Analysis Gender->Adherence | 2 Way Table
smokes.table<-table(train$Smokes,train$Adherence)
smokes.table
#Chi Squared test for Dependency
smokes.chi<-chisq.test(smokes.table)
smokes.chi
#since p<0.05 | It is DEPENDET
#Numerical Analysis Tuberculosis->Adherence | 2 Way Table
tuber.table<-table(train$Tuberculosis,train$Adherence)
tuber.table
#Chi Squared test for Dependency
tuber.chi<-chisq.test(tuber.table)
tuber.chi
#since p>0.05 | It is InDEPENDET
#Numerical Analysis SMS Reminder->Adherence | 2 Way Table
sms.table<-table(train$Sms_Reminder,train$Adherence)
sms.table
#Chi Squared test for Dependency
sms.chi<-chisq.test(sms.table)
sms.chi
train<-train[,c(-9,-10)]
test<-test[,c(-9,-10)]
set.seed(1)
val.index = createDataPartition(train$Adherence, p = .80, list = FALSE)
train = train[ val.index,]
validation  = train[-val.index,]
model1<-glm(train$Adherence~., data = train, family = "binomial")
coef(model1)
summary(model1)$coef
summary(model1)
predict.model1<-predict.glm(model1, newdata = validation[,-9], type = "response")
prob.model1<-ifelse(predict.model1>0.5,1,0)
confusion.model1<-table(Predicted=prob.model1,Actual=validation$Adherence)
confusion.model1
confusionMatrix(confusion.model1)
sum(confusion.model1[c(1,4)]/sum(confusion.model1[1:4])) #Correct Prediction
1-sum(confusion.model1[c(1,4)]/sum(confusion.model1[1:4])) #Prediction Error
LRmodel<-glm(train$Adherence~., data = train, family = "binomial")
summary(LRmodel)
predict.LRmodel<-predict.glm(LRmodel, newdata = test, type = "response")
predict.LR<-ifelse(predict.LRmodel>0.5,"Yes","No")
final.results<-cbind(predict.LR,predict.LRmodel)
head(final.results)
colnames(final.results)<-c("Probablity Score", "Adherence")
write.csv(final.results,"./Final.csv")
